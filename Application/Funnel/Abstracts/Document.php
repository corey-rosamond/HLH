<?php/** * Document * * @package App\Abstracts * @version 1.2.0 */namespace App\Abstracts;/** * Document * * This is the base document base for the funnel system this * gives the basic document and buffer methods and variables */\Framework\_IncludeCorrect(APP_ROOT."Abstracts".DSEP."Navigator.php");abstract class Document extends Navigator{  /** @var array $_tokens */  protected $_tokens;  /** @var null $_buffer */  protected $_buffer = null;  /** @var integer $_chunkSize */  protected $_chunkSize = 4000;  /** @var integer $_assetPath */  protected $_assetPath;  /**   * Document Start   * @method _documentStart   * @param $title   * @return string   */  protected function _documentStart($title)  {    return $this->_docType().      "<html lang=\"en\"><head>".      $this->_metas().      "<title>{$title}</title>".      $this->_scripts().      $this->_styles().      "</head><body class=\"funnel-page-type-{$this->_pageType}\">";  }  /**   * Document End   * @method _documentEnd   * @return string   */  protected function _documentEnd()  {    return $this->_scriptTag("Application/Funnel/Script/Funnel.js").    "</body></html>";  }  /****************************************************/  /*                  Group Entities                  */  /****************************************************/  /**   * Metas   * @method _metas   * @return string   */  private function _metas()  {    return $this->_metaName("viewport", "width=device-width, initial-scale=1").      $this->_metaTag("Content-Script-Type", "text/javascript").      $this->_metaTag("Content-Type", "text/html; charset=UTF-8").      $this->_metaTag("X-UA-Compatible", "IE=edge").      $this->_metaName("ROBOTS", "NOINDEX, NOFOLLOW");  }  /**   * Scripts   * @method _scripts   * @return string   */  private function _scripts()  {    return "<script type=\"text/javascript\">window._trackJs = { token: '0faa0c6306be4fc4971e0071ae8a5ca5' };</script>".      $this->_scriptTag("//d2zah9y47r7bi2.cloudfront.net/releases/current/tracker.js").      $this->_scriptTag("//hhhmedia.s3.amazonaws.com/FunnelResources/default/jQuery.js");  }  /**   * Styles   * @method _styles   * @return string   */  private function _styles()  {    return $this->_styleTag("//maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css").      $this->_styleTag("//vjs.zencdn.net/5.0.2/video-js.css").      $this->_styleTag("{$this->_assetPath}style.css");  }  /****************************************************/  /*                  HTML Entities                   */  /****************************************************/  /**   * DocType   * @method _docType   * @return string   */  private function _docType()  { return "<!DOCTYPE html>"; }  /**   * MetaTag   * @method _metaTag   * @param $httpEquiv   * @param $content   * @return string   */  private function _metaTag($httpEquiv, $content)  { return "<meta http-equiv=\"{$httpEquiv}\" content=\"{$content}\" />"; }  /**   * MetaName   * @method _metaName   * @param string $name   * @param string $content   * @return string   */  private function _metaName($name, $content)  { return "<meta name=\"{$name}\" content=\"{$content}\">\n"; }  /**   * ScriptTag   * @method _scriptTag   * @param string $src   * @param string $type   * @return string   */  private function _scriptTag($src, $type="text/javascript")  { return "<script type=\"{$type}\" src=\"{$src}\"></script>"; }  /**   * StyleTag   * @method _styleTag   * @param $href   * @return string   */  private function _styleTag($href)  { return "<link rel=\"stylesheet\" href=\"{$href}\">"; }  /****************************************************/  /*                  BUFFER METHODS                  */  /****************************************************/  /**   * Write to the buffer   * @method _write   * @param $content   */  protected function _write($content)  { $this->_buffer .= $content; }  /**   * Reset the buffer back to blank   * @method _resetBuffer   */  protected function _resetBuffer()  { $this->_buffer = null; }  /**   * Render the buffer to the page   * @method _render   * @param $buffer   * @return bool   */  protected function _render($buffer)  {    array_map (function ($token, $value) use (&$buffer) {      $buffer = str_replace ($token, $value, $buffer);    }, array_keys ($this->_tokens), $this->_tokens);    $output = str_split ($buffer, $this->_chunkSize);    foreach ($output as $index => $chunk) {      echo $chunk;    }    return true;  }}